task:
  name: Check Formatted
  container:
    image: kronicdeth/lumen-development:latest
  script: cargo fmt -- --check

task:
  name: Linux x86_64
  container:
    image: kronicdeth/lumen-development:latest
    cpu: 4
    memory: 12
  x86_64_cargo_cache:
    folder: $CARGO_HOME/registry
    fingerprint_script: cat Cargo.lock
  build_script: cargo build
  # `*_test_script`s in order of crate dependency graph
  liblumen_arena_test_script: |
    pushd liblumen_arena
    cargo test
    popd
  liblumen_core_test_script: |
    pushd liblumen_core
    cargo test
    popd
  liblumen_alloc_test_script: |
    pushd liblumen_alloc
    cargo test
    popd
  lumen_runtime_test_script: |
    pushd lumen_runtime
    cargo test
    popd
  liblumen_eir_interpreter_test_script: |
    pushd liblumen_eir_interpreter
    cargo test
    popd
  examples_spawn_chain_test_script: |
    pushd examples/spawn-chain
    cargo test
    popd
  before_cache_script: rm -rf $CARGO_HOME/registry/index

wasm32_task_template: &WASM32_TASK_TEMPLATE
  lumen_web_test_script: |
    pushd lumen_web
    wasm-pack test --headless --chrome
    popd
  examples_spawn_chain_build_script: |
    pushd examples/spawn-chain
    wasm-pack build
    popd
  examples_spawn_chain_test_script: |
    pushd examples/spawn-chain
    wasm-pack test --headless --chrome
    popd

task:
  name: Linux wasm32
  container:
    image: kronicdeth/lumen-development:latest
  linux_wasm32_cargo_cache:
    folder: $CARGO_HOME/registry
    fingerprint_script: cat Cargo.lock
  << : *WASM32_TASK_TEMPLATE
  examples_spawn_chain_package_script: |
    pushd examples/spawn-chain
    pushd www
    npm install
    popd
    pushd pkg
    npm link
    popd
    pushd www
    npm link spawn-chain
    npm run build
    popd
    popd
  examples_chain_chain_package_artifacts:
    path: "examples/spawn-chain/www/dist/*"
  before_cache_script: rm -rf $CARGO_HOME/registry/index

task:
  osx_instance:
    image: high-sierra-base
  name: macOS wasm32
  env:
    HOMEBREW_NO_AUTO_UPDATE: 1
    PATH: ${HOME}/.cargo/bin:${PATH}
  macos_wasm32_cargo_cache:
    folder: $CARGO_HOME/registry
    fingerprint_script: cat Cargo.lock
  install_rustup_script: |
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain=nightly
  install_wasm32_target_script: rustup target add wasm32-unknown-unknown --toolchain nightly
  install_wasm_bindgen_cli_script: cargo +nightly install wasm-bindgen-cli
  install_wasm_pack_script: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
  install_chrome_script: |
     brew cask install google-chrome
     brew cask info google-chrome
  install_chrome_driver_script: |
     wget https://chromedriver.storage.googleapis.com/76.0.3809.126/chromedriver_mac64.zip
     unzip chromedriver_mac64.zip
     mv chromedriver /usr/local/bin/
     rm chromedriver_mac64.zip
     chromedriver --version
  << : *WASM32_TASK_TEMPLATE
  before_cache_script: rm -rf $CARGO_HOME/registry/index

